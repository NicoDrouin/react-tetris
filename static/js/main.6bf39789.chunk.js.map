{"version":3,"sources":["assets/img/kremlin.svg","assets/img/react.svg","component/Tetris/LeftSide/Music/Music.js","component/Entrance/Entrance.js","component/Tetris/LeftSide/HighScores/HighScores.js","component/Tetris/LeftSide/About/About.js","component/Tetris/LeftSide/LeftSide/LeftSide.js","component/Tetris/Playfield/Countdown/Countdown.js","component/Tetris/Playfield/functions/setNewShape.js","component/Tetris/Playfield/Playfield/Playfield.js","component/Tetris/Playfield/functions/wallKicksData.js","component/Tetris/RightSide/InGameData/InGameData.js","component/Tetris/RightSide/NextShape/NextShape.js","component/Tetris/RightSide/RightSide/RightSide.js","component/Tetris/Popin/Popin.js","component/Tetris/Tetris/Tetris.js","App.js","actions/types.js","reducers/closeEntranceReducer.js","reducers/setNextShapeReducer.js","reducers/updateLinesReducer.js","reducers/updateLevelReducer.js","reducers/updateCurrentScoreReducer.js","reducers/updateHighScoresReducer.js","reducers/setPopinReducer.js","reducers/index.js","store.js","index.js"],"names":["module","exports","player","connect","undefined","dispatch","closeEntranceCreator","type","className","src","kremlin","alt","logoReact","onClick","musicIsActiveValue","playerIsVisibleValue","onPlayerReady","event","target","setVolume","loadPlaylist","list","listType","window","onYouTubeIframeAPIReady","YT","Player","width","height","playerVars","autoplay","loop","events","Music","useState","musicIsActive","setMusicIsActive","playerIsVisible","setPlayerIsVisible","playOrPause","pauseVideo","playVideo","tag","document","createElement","firstScriptTag","getElementsByTagName","parentNode","insertBefore","console","log","startPlayer","id","state","highScoresList","updateHighScoresReducer","localStorage","getItem","JSON","parse","length","map","score","i","key","setPopinCreator","popinState","documentElement","classList","add","LeftSide","Countdown","timerCountdown","startNewGame","setCountDownOver","playCountdownValue","useEffect","setInterval","clearInterval","setPlayCountdown","playCountdown","newShape","setNewShape","currentShapeAxis","currentShapeRotationState","currentShapeWallKicksPosition","timerTetrominoesFalling","timerMoveOnHoldTouchControl","callback","Math","ceil","random","wallKicksClassic","wallKicksI","initialBoxs","Array","fill","e","tableBoxsCurrent","tableBoxsStacked","currentShape","currentShapeCoordinates","speed","gameIsPaused","gameIsRunning","countDownIsOver","nextShape","setNextShapeReducer","lines","updateLinesReducer","level","updateLevelReducer","updateCurrentScoreReducer","setPopinReducer","setNextShapeCreator","updateLinesCreator","updateLevelCreator","updateCurrentScoreCreator","updateHighScoresCreator","newScore","togglePause","tableBoxs","setTableBoxs","addEventListener","handleKeyPress","setNextShape","startNewCycle","tick","moveShape","newNextShape","newCurrentShape","setShapeCoordinatesAndAxis","checkIfCanMove","setTableBoxsCurrent","cleanIntervalAndEvent","endGame","len","currentShapeNextPosition","direction","isTick","endCycle","checkForFullLines","fullLines","lineIsFull","j","pixelToRemove","linesRemoved","floor","incrementScore","removeFullLines","defaultPrevented","rotate","preventDefault","currentShapeLength","currentShapeAxisPosition","currentShapeAxisHorizontalPosition","currentShapeAxisVerticalPosition","boxPosition","boxDisplacement","boxPositionAfterRotation","canRotate","wallKicks","wallKicksTest","wallKickVariationPosition","checkIfCanRotate","removeEventListener","moveOnTouchControl","stopMoveOnTouchControl","box","onTouchStart","onTouchEnd","InGameData","lib","data","NextShape","printNextShape","closePopin","remove","href","Tetris","isEntranceClosed","closeEntranceReducer","isTouch","innerWidth","innerHeight","CLOSE_ENTRANCE","SET_NEXT_SHAPE","UPDATE_LINES","UPDATE_LEVEL","UPDATE_CURRENT_SCORE","UPDATE_HIGH_SCORES","SET_POPIN_STATE","action","currentHighScoresList","newHighScoresList","sort","n1","n2","slice","setItem","stringify","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById"],"mappings":"oHAAAA,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,4TCMvCC,E,yFCyQWC,mBACXC,GAPuB,SAAAC,GACvB,MAAO,CACHC,qBAAsB,kBAAMD,EAAS,CAAEE,KAAM,uBAItCJ,EAvQE,SAAC,GAAgC,IAA7BG,EAA4B,EAA5BA,qBAEjB,OACI,6BAASE,UAAU,YAEf,yBAAKC,IAAKC,IAASC,IAAI,YAEvB,yBAAKH,UAAU,aACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,6BAEA,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,6BAEA,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,6BAEA,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,6BAEA,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,6BAEA,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,MACf,yBAAKA,UAAU,UACf,yB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","file":"static/js/main.6bf39789.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kremlin.5dbdabf9.svg\";","module.exports = __webpack_public_path__ + \"static/media/react.f736ae38.svg\";","import React, { useState } from 'react'\r\nimport './Music.scss';\r\n\r\nlet musicIsActiveValue = false\r\nlet playerIsVisibleValue = false\r\n\r\nvar player\r\n\r\nfunction startPlayer() {\r\n    var tag = document.createElement('script')\r\n\r\n    tag.src = 'https://www.youtube.com/iframe_api'\r\n    var firstScriptTag = document.getElementsByTagName('script')[0]\r\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag)\r\n    console.log('script loaded');\r\n}\r\n\r\nwindow.onYouTubeIframeAPIReady = function() {\r\n    // eslint-disable-next-line no-undef\r\n    player = new YT.Player('player', {\r\n        /* 350X260 <-- control volume minimum size*/\r\n        width: '240',\r\n        height: '135',\r\n        playerVars: { \r\n            autoplay: 1,\r\n            loop: 1,\r\n            list: 'PLXrcddt4nRE_ZNKvbOkd2OaKNroxQ3_Ns',\r\n            listType: 'playlist'\r\n        },\r\n        events: {\r\n            'onReady': onPlayerReady,\r\n        }\r\n    })\r\n}\r\n\r\nfunction onPlayerReady(event) {\r\n    event.target.setVolume(60);\r\n    event.target.loadPlaylist(\r\n        {\r\n            list: 'PLXrcddt4nRE_ZNKvbOkd2OaKNroxQ3_Ns',\r\n            listType: 'playlist'\r\n        }\r\n    )\r\n}\r\n\r\n\r\nconst Music = () => {\r\n\r\n    const [musicIsActive, setMusicIsActive] = useState(false)\r\n    const [playerIsVisible, setPlayerIsVisible] = useState(false)\r\n\r\n    function loadPlayer() {\r\n        musicIsActiveValue = true\r\n        playerIsVisibleValue = true\r\n        setMusicIsActive(musicIsActiveValue)\r\n        setPlayerIsVisible(playerIsVisibleValue)\r\n        startPlayer()\r\n    }\r\n    \r\n    function playOrPause() {\r\n        musicIsActiveValue ? player.pauseVideo() : player.playVideo()\r\n        musicIsActiveValue = !musicIsActiveValue\r\n        setMusicIsActive(musicIsActiveValue)\r\n    }\r\n\r\n    return (\r\n        <div className='music'>\r\n            {\r\n                playerIsVisible ?\r\n                    musicIsActive ?\r\n                        <span className='btn' onClick={playOrPause}>Turn music off !</span>:\r\n                        <span className='btn' onClick={playOrPause}>Turn music on !</span>:\r\n                    <span className='btn' onClick={loadPlayer}>Play me a song !</span>\r\n            }\r\n            <br/>\r\n            <br/>\r\n            <div id=\"player\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music","import React from 'react'\r\nimport './Entrance.scss'\r\nimport kremlin from '../../assets/img/kremlin.svg'\r\nimport logoReact from '../../assets/img/react.svg'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Entrance = ( { closeEntranceCreator } ) => {\r\n\r\n    return (\r\n        <section className='entrance'>\r\n\r\n            <img src={kremlin} alt='Kremlin'/>\r\n\r\n            <div className='table top'>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <br/>\r\n\r\n                <div className='empty'></div>\r\n                <div className='T'></div>\r\n                <div className='T'></div>\r\n                <div className='T'></div>\r\n                <div className='empty'></div>\r\n                <div className='L'></div>\r\n                <div className='L'></div>\r\n                <div className='L'></div>\r\n                <div className='empty'></div>\r\n                <div className='T'></div>\r\n                <div className='T'></div>\r\n                <div className='T'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='S'></div>\r\n                <div className='S'></div>\r\n                <div className='empty'></div>\r\n                <div className='I'></div>\r\n                <div className='empty'></div>\r\n                <div className='L'></div>\r\n                <div className='L'></div>\r\n                <div className='L'></div>\r\n                <div className='empty'></div>\r\n                <br/>\r\n\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='T'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='L'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='T'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='Z'></div>\r\n                <div className='empty'></div>\r\n                <div className='S'></div>\r\n                <div className='empty'></div>\r\n                <div className='I'></div>\r\n                <div className='empty'></div>\r\n                <div className='L'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <br/>\r\n\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='I'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='O'></div>\r\n                <div className='O'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='I'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='Z'></div>\r\n                <div className='Z'></div>\r\n                <div className='empty'></div>\r\n                <div className='I'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='O'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <br/>\r\n\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='I'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='J'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='I'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='O'></div>\r\n                <div className='empty'></div>\r\n                <div className='O'></div>\r\n                <div className='empty'></div>\r\n                <div className='I'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='J'></div>\r\n                <div className='empty'></div>\r\n                <br/>\r\n\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='I'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='J'></div>\r\n                <div className='J'></div>\r\n                <div className='J'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='I'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='O'></div>\r\n                <div className='empty'></div>\r\n                <div className='O'></div>\r\n                <div className='empty'></div>\r\n                <div className='I'></div>\r\n                <div className='empty'></div>\r\n                <div className='J'></div>\r\n                <div className='J'></div>\r\n                <div className='J'></div>\r\n                <div className='empty'></div>\r\n                <br/>\r\n\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <br/>\r\n            </div>\r\n\r\n            <div className='table bottom'>\r\n                <img src={logoReact} alt='logo React'/>\r\n\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <br/>\r\n\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <br/>\r\n\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <br/>\r\n\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <br/>\r\n\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <br/>\r\n\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <br/>\r\n\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n                <div className='empty'></div>\r\n            </div>\r\n\r\n            <p>A React-powered Tetris</p>\r\n            <span className='btn' onClick={() => closeEntranceCreator()}>Play</span>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        closeEntranceCreator: () => dispatch({ type: 'CLOSE_ENTRANCE' }),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    undefined,\r\n    mapDispatchToProps\r\n)(Entrance)","import React, { Fragment } from 'react'\r\nimport './HighScores.scss';\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nconst HighScores = ( { highScoresList } ) => {\r\n\r\n    if (localStorage.getItem('scores')) {\r\n        highScoresList = JSON.parse(localStorage.getItem('scores'))\r\n    } else {\r\n        highScoresList = []\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                highScoresList.length > 0 &&\r\n                <section className='high-scores'>\r\n                    <p>High-scores :</p>\r\n                    <ul>\r\n                        {highScoresList.map((score, i) => \r\n                            <li key={i}>{score}</li>\r\n                        )}\r\n                    </ul>\r\n                </section>\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        highScoresList: state.updateHighScoresReducer\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    undefined\r\n)(HighScores)","import React from 'react'\r\nimport './About.scss';\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nconst About = ( { setPopinCreator } ) => {\r\n\r\n    function openPopin() {\r\n        document.documentElement.classList.add('popin-is-open');\r\n        setPopinCreator()\r\n    }\r\n\r\n    return (\r\n        <div className='about'>\r\n            <p onClick={openPopin}>About</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setPopinCreator: () => dispatch({ type: 'SET_POPIN_STATE', popinState: 'about'}),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    undefined,\r\n    mapDispatchToProps\r\n)(About)","import React from 'react'\r\nimport './LeftSide.scss';\r\n\r\nimport Music from '../Music/Music'\r\nimport HighScores from '../HighScores/HighScores'\r\nimport About from '../About/About'\r\n\r\n\r\nfunction LeftSide() {\r\n\r\n    return (\r\n        <section className='left-side side'>\r\n            <div className='top'>\r\n                <Music/>\r\n                <HighScores/>\r\n            </div>\r\n            <div className='bottom'>\r\n                <About/>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default LeftSide","import React, { useState, useEffect } from 'react'\r\nimport './Countdown.scss';\r\n\r\nconst Countdown = ( { startNewGame, setCountDownOver } ) => {\r\n\r\n    let timerCountdown\r\n    let playCountdownValue = 3\r\n\r\n    useEffect(() => {\r\n        popinPlayCountdown()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [] )\r\n\r\n    const [playCountdown, setPlayCountdown] = useState(3)\r\n\r\n    function popinPlayCountdown() {\r\n        timerCountdown = setInterval(() => countdown(), 1000)\r\n    }\r\n\r\n    function countdown() {\r\n        if (playCountdownValue > 1) {\r\n            playCountdownValue = playCountdownValue - 1\r\n        } else if (playCountdownValue === 1) {\r\n            playCountdownValue = 'PLAY !'\r\n        } else if (playCountdownValue === 'PLAY !') {\r\n            playCountdownValue = ''\r\n            clearInterval(timerCountdown)\r\n            setCountDownOver()\r\n            startNewGame()\r\n        }\r\n        setPlayCountdown(playCountdownValue)\r\n    }\r\n\r\n    return (\r\n        <span className='countdown'>\r\n            {playCountdown}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Countdown","let newShape = ''\r\n\r\nfunction setNewShape(callback) {\r\n    const randomShape = Math.ceil(Math.random() * (7))\r\n    switch(randomShape) {\r\n        case 1:\r\n            newShape = 'I'\r\n            break\r\n        case 2:\r\n            newShape = 'J'\r\n            break\r\n        case 3:\r\n            newShape = 'L'\r\n            break\r\n        case 4:\r\n            newShape = 'O'\r\n            break\r\n        case 5:\r\n            newShape = 'S'\r\n            break\r\n        case 6:\r\n            newShape = 'T'\r\n            break\r\n        case 7:\r\n            newShape = 'Z'\r\n            break\r\n        default:\r\n            // nope\r\n    }\r\n    callback(newShape)\r\n}\r\n\r\nexport default setNewShape","import React, { Fragment, useState, useEffect } from 'react'\r\nimport './Playfield.scss'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport Countdown from '../Countdown/Countdown'\r\n\r\nimport setNewShape from '../functions/setNewShape'\r\nimport { wallKicksClassic, wallKicksI } from '../functions/wallKicksData'\r\n\r\nconst initialBoxs =\r\n    Array(264).fill(0).map((e, i) =>\r\n        i % 12 === 0 || i % 12 === 11 ?\r\n        'border' :\r\n        'empty'\r\n    )\r\n\r\nexport let tableBoxsCurrent = [...initialBoxs]\r\nexport let tableBoxsStacked = [...initialBoxs]\r\n\r\nlet currentShape = ''\r\nlet currentShapeAxis\r\nlet currentShapeRotationState\r\nlet currentShapeCoordinates = []\r\nlet currentShapeWallKicksPosition\r\n\r\nlet speed = 1000\r\n\r\nlet timerTetrominoesFalling\r\nlet timerMoveOnHoldTouchControl\r\n\r\nlet gameIsPaused = false\r\n\r\nlet gameIsRunning = false\r\n\r\nlet countDownIsOver = false\r\n\r\n\r\nconst Playfield = ( {\r\n    setNextShapeCreator,\r\n    nextShape,\r\n    updateLinesCreator,\r\n    updateLevelCreator,\r\n    updateCurrentScoreCreator,\r\n    lines,\r\n    level,\r\n    score,\r\n    updateHighScoresCreator,\r\n    setPopinCreator,\r\n    popinState\r\n} ) => {\r\n\r\n    useEffect(() => {\r\n        // open a popin while game is not paused\r\n        if (!gameIsPaused && popinState !== 'inactive') {\r\n            togglePause()\r\n        // close popin about\r\n        } else if (gameIsRunning && gameIsPaused && popinState === 'inactive') {\r\n            togglePause()\r\n        // close popin gameover\r\n        } else if (countDownIsOver && !gameIsRunning && gameIsPaused && popinState === 'inactive') {\r\n            startNewGame()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [popinState] )\r\n\r\n    const [tableBoxs, setTableBoxs] = useState([...initialBoxs])\r\n\r\n\r\n    function startNewGame() {\r\n        tableBoxsCurrent = [...initialBoxs]\r\n        tableBoxsStacked = [...initialBoxs]\r\n        setTableBoxs([...initialBoxs])\r\n        lines = 0\r\n        updateLinesCreator(0)\r\n        level = 1\r\n        updateLevelCreator(1)\r\n        score = 0\r\n        updateCurrentScoreCreator(score)\r\n        speed = 1000\r\n        gameIsPaused = false\r\n        gameIsRunning = true\r\n        window.addEventListener('keydown', handleKeyPress)\r\n        setNewShape(setNextShape)\r\n        setNewShape(startNewCycle)\r\n    }\r\n\r\n    function tick() {\r\n        moveShape(12, true)\r\n    }\r\n\r\n    function setNextShape(newNextShape) {\r\n        setNextShapeCreator(newNextShape)\r\n        nextShape = newNextShape\r\n    }\r\n\r\n    function startNewCycle(newCurrentShape) {\r\n        currentShape = newCurrentShape\r\n        currentShapeRotationState = 0\r\n        setShapeCoordinatesAndAxis(currentShape)\r\n        if (checkIfCanMove(currentShapeCoordinates, 0)) {\r\n            setTableBoxsCurrent()\r\n            timerTetrominoesFalling = setInterval(() => tick(), speed)\r\n            window.addEventListener('keydown', handleKeyPress)\r\n        } else {\r\n            endGame()\r\n        }\r\n    }\r\n\r\n    function setTableBoxsCurrent() {\r\n        tableBoxsCurrent = [...tableBoxsStacked]\r\n        for (let i = 0, len = currentShapeCoordinates.length; i < len; i++) {\r\n            tableBoxsCurrent[currentShapeCoordinates[i]] = currentShape\r\n        }\r\n        setTableBoxs(tableBoxsCurrent);\r\n    }\r\n\r\n    function setShapeCoordinatesAndAxis(currentShape) {\r\n        switch(currentShape) {\r\n            case 'I':\r\n                currentShapeCoordinates = [28, 29, 30, 31]\r\n                currentShapeAxis = 1\r\n                break\r\n            case 'J':\r\n                currentShapeCoordinates = [16, 28, 29, 30]\r\n                currentShapeAxis = 2\r\n                break\r\n            case 'L':\r\n                currentShapeCoordinates = [18, 28, 29, 30]\r\n                currentShapeAxis = 2\r\n                break\r\n            case 'O':\r\n                currentShapeCoordinates = [17, 18, 29, 30]\r\n                break\r\n            case 'S':\r\n                currentShapeCoordinates = [17, 18, 28, 29]\r\n                currentShapeAxis = 3\r\n                break\r\n            case 'T':\r\n                currentShapeCoordinates = [17, 28, 29, 30]\r\n                currentShapeAxis = 2\r\n                break\r\n            case 'Z':\r\n                currentShapeCoordinates = [16, 17, 29, 30]\r\n                currentShapeAxis = 2\r\n                break\r\n            default:\r\n                // nope\r\n        }\r\n    }\r\n\r\n    function checkIfCanMove(currentShapeNextPosition, direction, isTick) {\r\n        const len = currentShapeNextPosition.length\r\n        for (let i = 0; i < len; i++) {\r\n            if (tableBoxsStacked[currentShapeNextPosition[i]] !== 'empty') {\r\n                if (direction === 12) {\r\n                    endCycle()\r\n                }\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n    function checkForFullLines() {\r\n        let fullLines = []\r\n        for (let i = 0; i < 22; i++) {\r\n            let lineIsFull = true\r\n            for (let j = 0; j < 12 && lineIsFull === true; j++) {\r\n                if (tableBoxsStacked[(i * 12) + j] === 'empty') {\r\n                    lineIsFull = false\r\n                }\r\n            }\r\n            if (lineIsFull) {\r\n                fullLines = [...fullLines, i]\r\n            }\r\n        }\r\n        if (fullLines.length > 0) {\r\n            removeFullLines(fullLines)\r\n        }\r\n    }\r\n\r\n    function removeFullLines(fullLines) {\r\n        const len = fullLines.length\r\n        for (let i = 0; i < len; i++) {\r\n            for (let pixelToRemove = (fullLines[i] * 12) + 11; pixelToRemove > -1; pixelToRemove--) {\r\n                tableBoxsCurrent[pixelToRemove] = tableBoxsCurrent[pixelToRemove - 12]\r\n            }\r\n            for (let j = 0; j < 12; j++) {\r\n                tableBoxsCurrent[j] = \r\n                    j % 12 === 0 || j % 12 === 11 ?\r\n                    'border' :\r\n                    'empty'\r\n            }\r\n        }\r\n        incrementLines(len)\r\n        incrementScore(len)\r\n    }\r\n\r\n    function incrementLines(linesRemoved) {\r\n        lines += linesRemoved\r\n        updateLinesCreator(lines)\r\n        updateIntervalLevel()\r\n    }\r\n\r\n    function updateIntervalLevel() {\r\n        level = Math.floor(lines / 10) + 1\r\n        updateLevelCreator(level)\r\n        level > 1 && updateSpeed()\r\n    }\r\n\r\n    function incrementScore(linesRemoved) {\r\n        switch(linesRemoved) {\r\n            case 1:\r\n                score += 40 * level\r\n                break\r\n            case 2:\r\n                score += 100 * level\r\n                break\r\n            case 3:\r\n                score += 300 * level\r\n                break\r\n            case 4:\r\n                score += 1200 * level\r\n                break\r\n            default:\r\n                // nope\r\n        }\r\n    }\r\n\r\n    function updateSpeed() {\r\n        speed = ((0.8 - ((level - 1) * 0.007)) ** (level - 1)) * 1000\r\n    }\r\n\r\n    function handleKeyPress(event) {\r\n        if (event.defaultPrevented) {\r\n            return // Do nothing if the event was already processed\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Down': // IE/Edge specific value\r\n            case 'ArrowDown':\r\n                moveShape(12)\r\n                break\r\n            case 'Up': // IE/Edge specific value\r\n            case 'ArrowUp':\r\n                rotate()\r\n                break\r\n            case 'Left': // IE/Edge specific value\r\n            case 'ArrowLeft':\r\n                moveShape(-1)\r\n                break\r\n            case 'Right': // IE/Edge specific value\r\n            case 'ArrowRight':\r\n                moveShape(1)\r\n                break\r\n            case 'F1':\r\n            case 'Escape':\r\n            case 'p':\r\n                togglePause()\r\n                break\r\n            default:\r\n                return // Quit when this doesn't handle the key event.\r\n        }\r\n\r\n        // Cancel the default action to avoid it being handled twice\r\n        event.preventDefault()\r\n    }\r\n\r\n    const moveShape = (direction, isTick) => {\r\n        if (gameIsRunning && !gameIsPaused) {\r\n            let currentShapeNextPosition = []\r\n            for (let i = 0, len = currentShapeCoordinates.length; i < len; i++) {\r\n                currentShapeNextPosition = [...currentShapeNextPosition, currentShapeCoordinates[i] + direction]\r\n            }\r\n            const canMove = checkIfCanMove(currentShapeNextPosition, direction, isTick)\r\n            if (canMove) {\r\n                if (direction === 12 && !isTick) {\r\n                    clearInterval(timerTetrominoesFalling)\r\n                    timerTetrominoesFalling = setInterval(() => tick(), speed)\r\n                    score += 1\r\n                    updateCurrentScoreCreator(score)\r\n                }\r\n                currentShapeCoordinates = currentShapeNextPosition\r\n                setTableBoxsCurrent()\r\n            }\r\n        }\r\n    }\r\n\r\n    function rotate() {\r\n        if (gameIsRunning && !gameIsPaused && currentShape !== 'O') {\r\n            const currentShapeLength = currentShapeCoordinates.length\r\n            const currentShapeAxisPosition = currentShapeCoordinates[currentShapeAxis]\r\n            const currentShapeAxisHorizontalPosition = currentShapeAxisPosition % 12\r\n            const currentShapeAxisVerticalPosition = Math.floor(currentShapeAxisPosition / 12)\r\n            let currentShapeNextPosition = []\r\n            for (let i = 0; i < currentShapeLength; i++) {\r\n                let boxPosition = currentShapeCoordinates[i]\r\n                let boxHorizontalPosition = boxPosition % 12\r\n                let boxVerticalPosition = Math.floor(boxPosition / 12)\r\n                let boxDisplacement =\r\n                    ((currentShapeAxisHorizontalPosition - boxHorizontalPosition) * -11) +\r\n                    ((currentShapeAxisVerticalPosition - boxVerticalPosition) * 13)\r\n                currentShapeRotationState = currentShapeRotationState % 4\r\n                if (currentShape === 'I') {\r\n                    if (currentShapeRotationState === 0) {\r\n                        boxDisplacement++\r\n                    } else if (currentShapeRotationState === 1) {\r\n                        boxDisplacement += 12\r\n                    } else if (currentShapeRotationState === 2) {\r\n                        boxDisplacement--\r\n                    } else if (currentShapeRotationState === 3) {\r\n                        boxDisplacement -= 12\r\n                    }\r\n                }\r\n                let boxPositionAfterRotation = boxPosition + boxDisplacement\r\n                currentShapeNextPosition = [...currentShapeNextPosition, boxPositionAfterRotation]\r\n            }\r\n            if (checkIfCanRotate(currentShapeNextPosition)) {\r\n                currentShapeCoordinates = currentShapeWallKicksPosition\r\n                currentShapeRotationState++\r\n                setTableBoxsCurrent()\r\n            }\r\n        }\r\n    }\r\n\r\n    function checkIfCanRotate(currentShapeNextPosition) {\r\n        const len = currentShapeNextPosition.length\r\n        let canRotate\r\n        let wallKicks\r\n        currentShape !== 'I' ? wallKicks = wallKicksClassic : wallKicks = wallKicksI\r\n            for (let wallKicksTest = 0; wallKicksTest < 5; wallKicksTest++) {\r\n                canRotate = true\r\n                currentShapeWallKicksPosition = []\r\n                const wallKickVariationPosition = wallKicks[currentShapeRotationState][wallKicksTest]\r\n                for (let i = 0; i < len; i++) {\r\n                    currentShapeWallKicksPosition[i] = currentShapeNextPosition[i] + wallKickVariationPosition\r\n                    if (tableBoxsStacked[currentShapeWallKicksPosition[i]] !== 'empty') {\r\n                        canRotate = false\r\n                        break\r\n                    }\r\n                }\r\n                if (canRotate === true) {\r\n                    return true\r\n                }\r\n            }\r\n        return false\r\n    }\r\n\r\n    function endCycle() {\r\n        tableBoxsStacked = tableBoxsCurrent\r\n        checkForFullLines()\r\n        cleanIntervalAndEvent()\r\n        setShapeCoordinatesAndAxis(nextShape)\r\n        startNewCycle(nextShape)\r\n        setNewShape(setNextShape)\r\n    }\r\n\r\n    function endGame() {\r\n        gameIsRunning = false\r\n        cleanIntervalAndEvent()\r\n        if (score > 0) {\r\n            updateHighScoresCreator(score)\r\n        }\r\n        document.documentElement.classList.add('popin-is-open');\r\n        setPopinCreator()\r\n    }\r\n\r\n    function cleanIntervalAndEvent() {\r\n        clearInterval(timerTetrominoesFalling)\r\n        window.removeEventListener('keydown', handleKeyPress)\r\n    }\r\n\r\n    function setCountDownOver() {\r\n        countDownIsOver = true\r\n    }\r\n\r\n    function togglePause() {\r\n        if (countDownIsOver && gameIsRunning && popinState === 'inactive') {\r\n            gameIsPaused ? timerTetrominoesFalling = setInterval(() => tick(), speed) : clearInterval(timerTetrominoesFalling)\r\n            gameIsPaused = !gameIsPaused\r\n        }\r\n    }\r\n\r\n    let moveOnHoldDownSpeed = 80\r\n    let moveOnHoldSideSpeed = 160\r\n\r\n    function moveOnTouchControl(direction, speed) {\r\n        if (gameIsRunning && !gameIsPaused) {\r\n            moveShape(direction)\r\n            timerMoveOnHoldTouchControl = window.setInterval(() => moveShape(direction), speed)\r\n        }\r\n    }\r\n\r\n    function stopMoveOnTouchControl() {\r\n        clearInterval(timerMoveOnHoldTouchControl)\r\n        timerMoveOnHoldTouchControl = 0\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className='playfield-container'>\r\n                <div className='playfield'>\r\n                    <Countdown\r\n                        startNewGame = {startNewGame}\r\n                        setCountDownOver = {setCountDownOver}\r\n                    />\r\n                    {tableBoxs.map((box, i) =>\r\n                        i % 12 === 11 ?\r\n                        <Fragment key={i}><div className={tableBoxs[i]}></div><br/></Fragment> :\r\n                        <div key={i} className={tableBoxs[i]}></div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className='control'>\r\n                <div className='top'>\r\n                    <button\r\n                        onTouchStart={() => moveOnTouchControl(-1, moveOnHoldSideSpeed)}\r\n                        onTouchEnd={() => stopMoveOnTouchControl()}\r\n                        className='arrow-left'\r\n                    ></button>\r\n                    <button onClick={() => rotate()} className='rotate'></button>\r\n                    <button\r\n                        onTouchStart={() => moveOnTouchControl(1, moveOnHoldSideSpeed)}\r\n                        onTouchEnd={() => stopMoveOnTouchControl()}\r\n                        className='arrow-right'\r\n                    ></button>\r\n                </div>\r\n                <div className='down'>\r\n                    <button\r\n                        onTouchStart={() => moveOnTouchControl(12, moveOnHoldDownSpeed)}\r\n                        onTouchEnd={() => stopMoveOnTouchControl()}\r\n                        className='arrow-down'\r\n                    ></button>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    nextShape: state.setNextShapeReducer,\r\n    lines: state.updateLinesReducer,\r\n    level: state.updateLevelReducer,\r\n    score: state.updateCurrentScoreReducer,\r\n    popinState: state.setPopinReducer\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setNextShapeCreator: (nextShape) => dispatch({ type: 'SET_NEXT_SHAPE', nextShape }),\r\n        updateLinesCreator: (lines) => dispatch({ type: 'UPDATE_LINES', lines }),\r\n        updateLevelCreator: (level) => dispatch({ type: 'UPDATE_LEVEL', level }),\r\n        updateCurrentScoreCreator: (score) => dispatch({ type: 'UPDATE_CURRENT_SCORE', score }),\r\n        updateHighScoresCreator: (score) => dispatch({ type: 'UPDATE_HIGH_SCORES', newScore: score }),\r\n        setPopinCreator: () => dispatch({ type: 'SET_POPIN_STATE', popinState: 'gameOver' })\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Playfield)","export const wallKicksClassic = [\r\n    [ 0, -1, -13, 24, 23 ],\r\n    [ 0, 1, 13, -24, -23 ],\r\n    [ 0, 1, -11, 24, 25 ],\r\n    [ 0, -1, 11, -24, -25 ]\r\n]\r\n\r\n// export const wallKicksClassicCounterclockwise = [\r\n//     [ 0, 1, 13, -24, -23 ],\r\n//     [ 0, -1, -13, 24, 23 ],\r\n//     [ 0, -1, 11, -24, -25 ],\r\n//     [ 0, 1, -11, 24, 25 ]\r\n// ]\r\n\r\nexport const wallKicksI = [\r\n    [ 0, -2, 1, 10, -23 ],\r\n    [ 0, -1, 2, -25, -10 ],\r\n    [ 0, 2, -1, -10, 23 ],\r\n    [ 0, 1, -2, 25, 10 ]\r\n]\r\n\r\n// export const wallKicksICounterclockwise = [\r\n//     [ 0, 2, -1, -10, 23 ],\r\n//     [ 0, 1, -2, 25, 10 ],\r\n//     [ 0, -2, 1, 10, -23 ],\r\n//     [ 0, -1, 2, -25, -10 ]\r\n// ]","import React from 'react'\r\nimport './InGameData.scss';\r\n\r\nconst InGameData = ( { lib, data } ) => {\r\n    return (\r\n        <div className='num-data'>\r\n            {lib} :<br/>\r\n            {data}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InGameData","import React from 'react'\r\nimport './NextShape.scss';\r\n\r\nconst NextShape = ( { nextShape } ) => {\r\n\r\n    function printNextShape() {\r\n        switch(nextShape) {\r\n            case 'I':\r\n                return (\r\n                    <div className='next-shape'>\r\n                        <div className='line'>\r\n                            <div className='I'></div>\r\n                            <div className='I'></div>\r\n                            <div className='I'></div>\r\n                            <div className='I'></div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            case 'J':\r\n                return (\r\n                    <div className='next-shape'>\r\n                        <div className='line'>\r\n                            <div className='J'></div>\r\n                            <div className='empty'></div>\r\n                            <div className='empty'></div>\r\n                        </div>\r\n                        <div className='line'>\r\n                            <div className='J'></div>\r\n                            <div className='J'></div>\r\n                            <div className='J'></div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            case 'L':\r\n                return (\r\n                    <div className='next-shape'>\r\n                        <div className='line'>\r\n                            <div className='empty'></div>\r\n                            <div className='empty'></div>\r\n                            <div className='L'></div>\r\n                        </div>\r\n                        <div className='line'>\r\n                            <div className='L'></div>\r\n                            <div className='L'></div>\r\n                            <div className='L'></div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            case 'O':\r\n                return (\r\n                    <div className='next-shape'>\r\n                        <div className='line'>\r\n                            <div className='O'></div>\r\n                            <div className='O'></div>\r\n                        </div>\r\n                        <div className='line'>\r\n                            <div className='O'></div>\r\n                            <div className='O'></div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            case 'S':\r\n                return (\r\n                    <div className='next-shape'>\r\n                        <div className='line'>\r\n                            <div className='empty'></div>\r\n                            <div className='S'></div>\r\n                            <div className='S'></div>\r\n                        </div>\r\n                        <div className='line'>\r\n                            <div className='S'></div>\r\n                            <div className='S'></div>\r\n                            <div className='empty'></div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            case 'T':\r\n                return (\r\n                    <div className='next-shape'>\r\n                        <div className='line'>\r\n                            <div className='empty'></div>\r\n                            <div className='T'></div>\r\n                            <div className='empty'></div>\r\n                        </div>\r\n                        <div className='line'>\r\n                            <div className='T'></div>\r\n                            <div className='T'></div>\r\n                            <div className='T'></div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            case 'Z':\r\n                return (\r\n                    <div className='next-shape'>\r\n                     <div className='line'>\r\n                            <div className='Z'></div>\r\n                            <div className='Z'></div>\r\n                            <div className='empty'></div>\r\n                        </div>\r\n                        <div className='line'>\r\n                            <div className='empty'></div>\r\n                            <div className='Z'></div>\r\n                            <div className='Z'></div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            default:\r\n                return <div className='next-shape'></div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='next-shape-container'>\r\n            {printNextShape()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NextShape","import React from \"react\"\r\nimport './RightSide.scss';\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport InGameData from '../InGameData/InGameData'\r\nimport NextShape from '../NextShape/NextShape'\r\n\r\n\r\nconst RightSide = ( { lines, level, score, nextShape } ) => {\r\n\r\n  return (\r\n      <div className='right-side side'>\r\n        <InGameData\r\n            lib = 'Lines'\r\n            data = {lines}\r\n        />\r\n        <InGameData\r\n            lib = 'Level'\r\n            data = {level}\r\n        />\r\n        <InGameData\r\n            lib = 'Score'\r\n            data = {score}\r\n        />\r\n        <NextShape nextShape = {nextShape} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    lines: state.updateLinesReducer,\r\n    level: state.updateLevelReducer,\r\n    score: state.updateCurrentScoreReducer,\r\n    nextShape: state.setNextShapeReducer\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  undefined\r\n)(RightSide)","import React, { Fragment } from 'react'\r\nimport './Popin.scss';\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nconst Popin = ( { popinState, setPopinCreator } ) => {\r\n\r\n    function closePopin() {\r\n        setPopinCreator()\r\n        document.documentElement.classList.remove('popin-is-open');\r\n    }\r\n\r\n    return (\r\n            popinState !== 'inactive' &&\r\n            <div className='popin-container'>\r\n                <div className='popin'>\r\n                    {\r\n                        popinState === 'gameOver'\r\n                        &&\r\n                            <Fragment>\r\n                                <p>Game over, the wall is falling.</p>\r\n                                <p>The Politburo will never forget your sacrifice for creating order out of chaos.</p>\r\n                                <span className='btn' onClick={closePopin}>Play again</span>\r\n                            </Fragment>\r\n                    }\r\n                    {\r\n                        popinState === 'about'\r\n                        &&\r\n                            <Fragment>\r\n                                <p>This game is a tribute to Tetris and is not affiliated with the Tetris Company.</p>\r\n                                <p>I did it to learn how to develop with React.</p>\r\n                                <p>I used the font <a href='http://www.tenbytwenty.com/#munro'>Munro</a> font created by <a href='http://edmerritt.com/'>Ed Merritt</a> and an icon from Saint Basil Cathedral made by <a href='https://www.freepik.com/home'>Freepik</a> from <a href='http://www.flaticon.com/'>www.flaticon.com</a></p>\r\n                                <span className='btn' onClick={closePopin}>Okie dokie</span>\r\n                            </Fragment>\r\n                    }\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    popinState: state.setPopinReducer\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setPopinCreator: () => dispatch({ type: 'SET_POPIN_STATE', popinState: 'inactive'}),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Popin)","import React from 'react'\r\nimport './Tetris.scss';\r\n\r\nimport LeftSide from '../LeftSide/LeftSide/LeftSide'\r\nimport Playfield from '../Playfield/Playfield/Playfield'\r\nimport RightSide from '../RightSide/RightSide/RightSide'\r\nimport Popin from '../Popin/Popin'\r\n\r\n\r\nfunction Tetris() {\r\n\r\n  return (\r\n    <div className='tetris-container'>\r\n      <section className='tetris'>\r\n        <LeftSide/>\r\n        <Playfield/>\r\n        <RightSide/>\r\n        <Popin/>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tetris","import React, { StrictMode } from 'react'\n\nimport { connect } from 'react-redux'\n\nimport Entrance from './component/Entrance/Entrance'\nimport Tetris from './component/Tetris/Tetris/Tetris'\n\n\nconst App = ( { isEntranceClosed } ) => {\n\n  let isTouch = (window.innerWidth * window.innerHeight) < 1024 * 768 ? true : false\n\n  return (\n    <StrictMode>\n      <div className={isTouch ? 'App isTouch' : 'App'}>\n        {\n          isEntranceClosed\n          ?\n          <Tetris/>\n          :\n          <Entrance/>\n        }\n      </div>\n    </StrictMode>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isEntranceClosed: state.closeEntranceReducer\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  undefined\n)(App)","// Close entrance\r\nexport const CLOSE_ENTRANCE = 'CLOSE_ENTRANCE'\r\n\r\n// Set next shape\r\nexport const SET_NEXT_SHAPE = 'SET_NEXT_SHAPE'\r\n\r\n// Update lines\r\nexport const UPDATE_LINES = 'UPDATE_LINES'\r\n\r\n// Update level\r\nexport const UPDATE_LEVEL = 'UPDATE_LEVEL'\r\n\r\n// Update current scores\r\nexport const UPDATE_CURRENT_SCORE = 'UPDATE_CURRENT_SCORE'\r\n\r\n// Update high-scores\r\nexport const UPDATE_HIGH_SCORES = 'UPDATE_HIGH_SCORES'\r\n\r\n// Set popin state ( inactive - gameOver - about)\r\nexport const SET_POPIN_STATE = 'SET_POPIN_STATE'","import { CLOSE_ENTRANCE } from '../actions/types'\r\n\r\nfunction closeEntranceReducer(state=false, action) {\r\n    switch (action.type) {\r\n        case CLOSE_ENTRANCE:\r\n            return true\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default closeEntranceReducer","import { SET_NEXT_SHAPE } from '../actions/types'\r\n\r\nfunction setNextShapeReducer(state='nothing', action) {\r\n    switch (action.type) {\r\n        case SET_NEXT_SHAPE:\r\n            return action.nextShape\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default setNextShapeReducer","import { UPDATE_LINES } from '../actions/types'\r\n\r\nfunction updateLinesReducer(state=0, action) {\r\n    switch (action.type) {\r\n        case UPDATE_LINES:\r\n            return action.lines\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default updateLinesReducer","import { UPDATE_LEVEL } from '../actions/types'\r\n\r\nfunction updateLevelReducer(state=1, action) {\r\n    switch (action.type) {\r\n        case UPDATE_LEVEL:\r\n            return action.level\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default updateLevelReducer","import { UPDATE_CURRENT_SCORE } from '../actions/types'\r\n\r\nfunction updateCurrentScoreReducer(state=0, action) {\r\n    switch (action.type) {\r\n        case UPDATE_CURRENT_SCORE:\r\n            return action.score\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default updateCurrentScoreReducer","import { UPDATE_HIGH_SCORES } from '../actions/types'\r\n\r\nfunction updateHighScoresReducer(state=[], action) {\r\n    switch (action.type) {\r\n        case UPDATE_HIGH_SCORES:\r\n            let currentHighScoresList =\r\n                localStorage.getItem('scores') ?\r\n                JSON.parse(localStorage.getItem('scores')) :\r\n                []\r\n            let newHighScoresList = [\r\n                ...currentHighScoresList,\r\n                action.newScore\r\n            ]\r\n            newHighScoresList.sort(function(n1, n2){\r\n                return n2 - n1\r\n            }) \r\n            newHighScoresList = newHighScoresList.slice(0, 3)\r\n            localStorage.setItem('scores', JSON.stringify(newHighScoresList))\r\n            return newHighScoresList\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default updateHighScoresReducer","import { SET_POPIN_STATE } from '../actions/types'\r\n\r\nfunction setPopinReducer(state='inactive', action) {\r\n    switch (action.type) {\r\n        case SET_POPIN_STATE:\r\n            return action.popinState\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default setPopinReducer","import { combineReducers } from 'redux'\r\n\r\nimport closeEntranceReducer from './closeEntranceReducer'\r\nimport setNextShapeReducer from './setNextShapeReducer'\r\nimport updateLinesReducer from './updateLinesReducer'\r\nimport updateLevelReducer from './updateLevelReducer'\r\nimport updateCurrentScoreReducer from './updateCurrentScoreReducer'\r\nimport updateHighScoresReducer from './updateHighScoresReducer'\r\nimport setPopinReducer from './setPopinReducer'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    closeEntranceReducer,\r\n    setNextShapeReducer,\r\n    updateLinesReducer,\r\n    updateLevelReducer,\r\n    updateCurrentScoreReducer,\r\n    updateHighScoresReducer,\r\n    setPopinReducer\r\n})\r\n\r\n\r\nexport default rootReducer","import { createStore } from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/style.scss'\nimport App from './App'\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n// import * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()"],"sourceRoot":""}